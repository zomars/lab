# actual workflow is almost the same as pull_request.yml but runs on the different event
# and for Dependabot only
name: Dependabot PR

on:
  pull_request_target:
  workflow_dispatch:

env:
  PR_ID: ${{ github.event.number }}
  node-version: 14

concurrency:
  group: dependabot-pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  remove_labels:
    name: Remove labels
    runs-on: ubuntu-latest
    # sender.login is needed for checks re-triggered from GH UI
    if: |
      (github.actor == 'dependabot[bot]' || github.event.sender.login == 'dependabot[bot]') &&
      contains(github.event.pull_request.labels.*.name, 'ready to merge')

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions-ecosystem/action-remove-labels@v1.1.1
        with:
          github_token: ${{ github.token }}
          labels: ready to merge

  setup:
    name: Yarn install & cache

    runs-on: ubuntu-latest

    # this job is for dependabot PRs only
    if: github.actor == 'dependabot[bot]' || github.event.sender.login == 'dependabot[bot]'

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - name: node_modules cache
        uses: actions/cache@v2
        env:
          cache-name: node-modules-yarn
          cache-fingerprint: ${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-

      - name: Yarn install
        run: yarn install --prefer-offline --frozen-lockfile --verbose

  lint:
    name: Linters

    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        env:
          cache-name: node-modules-yarn
          cache-fingerprint: ${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}

      - name: lint the code
        run: yarn lint

  build:
    name: Production build

    timeout-minutes: 60

    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - name: Cache production build
        id: prod-build-cache
        uses: actions/cache@v2
        env:
          cache-name: prod-build
          cache-fingerprint: >-
            ${{ hashFiles('package.json','gatsby.config.ts','gatsby.node.ts','gatsby-ssr.tsx') }}-
            ${{ hashFiles('src/html.tsx', 'src/gatsby-hooks/*.*','src/page-templates/**/*.tsx') }}
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}
          restore-keys: |-
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Restore node_modules from cache
        if: steps.prod-build-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: node-modules-yarn
          cache-fingerprint: ${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}

      - name: Gatsby production build
        if: steps.prod-build-cache.outputs.cache-hit != 'true'
        run: yarn build

  staging-deploy:
    name: Deploy to staging env

    runs-on: ubuntu-latest

    needs: [lint, build]

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - name: Restore exact production build from cache
        uses: actions/cache@v2
        env:
          cache-name: prod-build
          cache-fingerprint: >-
            ${{ hashFiles('package.json','gatsby.config.ts','gatsby.node.ts','gatsby-ssr.tsx') }}-
            ${{ hashFiles('src/html.tsx', 'src/gatsby-hooks/*.*','src/page-templates/**/*.tsx') }}
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}

      - name: Staging deploy
        run: yarn deploy-netlify --alias pr$PR_ID --message $DEPLOY_MESSAGE
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          DEPLOY_MESSAGE: PR${{ github.event.number }}/${{ github.sha }}

  e2e-test:
    name: E2E tests

    runs-on: ubuntu-latest

    needs: staging-deploy

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        env:
          cache-name: node-modules-yarn
          cache-fingerprint: ${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-fingerprint }}-${{ github.sha }}

        # figure the better way supporting all the packages
      - name: Fake yarn postinstall
        run: yarn playwright install

      - name: Run tests
        run: yarn test-e2e

  add-labels:
    # add ready-to-merge label so that we merge these PRs automatically
    name: Add labels

    runs-on: ubuntu-latest

    needs: e2e-test

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@v2
        name: Set nodeJs version
        with:
          node-version: ${{ env.node-version }}

      - uses: actions-ecosystem/action-add-labels@v1.1.0
        name: Add labels
        with:
          github_token: ${{ github.token }}
          labels: ready to merge
