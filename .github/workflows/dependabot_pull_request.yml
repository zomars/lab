# actual workflow is exactly almost the same as pull_request.yml but runs on the different event
# and for Dependabot only
# Linting is removed since that is done on the main PR workflow.
name: Dependabot PR

on:
  pull_request_target:
  workflow_dispatch:

env:
  PR_ID: ${{ github.event.number }}

jobs:
  debug:
    name: Debug logs
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo event: ${{ github.event_name }}

  remove_labels:
    name: Remove labels
    runs-on: ubuntu-latest
    if: |
      (github.actor == 'dependabot[bot]' || github.event_name == 'workflow_dispatch') &&
      contains(github.event.pull_request_target.labels.*.name, 'ready to merge')

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions-ecosystem/action-remove-labels@v1.1.1
        with:
          github_token: ${{ github.token }}
          labels: ready to merge

  setup:
    name: Yarn install

    runs-on: ubuntu-latest

    # this job is for dependabot PRs only
    if: github.actor == 'dependabot[bot]' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install dependencies
        run: yarn install --prefer-offline

  lint:
    name: Linting

    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: lint the code
        run: yarn lint

  build:
    name: Production build

    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: Production build and cache it
        uses: actions/cache@v2
        env:
          cache-name: prod-build
        with:
          path: public
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: build the website
        run: yarn build

  staging-deploy:
    name: Deploy to staging env

    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: restore website build from cache
        uses: actions/cache@v2
        env:
          cache-name: prod-build
        with:
          path: public
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: netlify deploy
        run: yarn deploy-netlify --alias pr$PR_ID --message $DEPLOY_MESSAGE
        env:
          NETLIFY_SITE_ID: 0f94f863-38eb-4a4b-a1c3-dd677837bd32
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          DEPLOY_MESSAGE: PR${{ github.event.number }}/${{ github.sha }}

  e2e-test:
    name: E2E tests

    runs-on: ubuntu-latest

    needs: [lint, staging-deploy]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: run tests
        run: yarn test-e2e

  add-labels:
    # add ready-to-merge label so that we merge these PRs automatically
    name: Add labels

    runs-on: ubuntu-latest

    needs: [e2e-test]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          github_token: ${{ github.token }}
          labels: ready to merge
