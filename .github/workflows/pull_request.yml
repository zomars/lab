name: prs

on:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PR_ID: ${{ github.event.number }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install dependencies
        run: yarn install --prefer-offline

  lint:
    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: lint the code
        run: yarn lint

  build-staging-deploy:
    runs-on: ubuntu-latest

    needs: [setup, lint]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: build the website
        run: yarn build

      - name: netlify deploy
        run: yarn deploy-netlify --alias PR-$PR_ID --message $DEPLOY_MESSAGE
        env:
          NETLIFY_SITE_ID: 0f94f863-38eb-4a4b-a1c3-dd677837bd32
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          DEPLOY_MESSAGE: PR${{ github.event.number }}/${{ github.sha }}
#
#      - name: install SSH key
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.MT_STAGING_SSH_KEY }}
#          name: mt_icode # optional
#          known_hosts: ${{ secrets.MT_SSH_KNOWN_HOSTS }}
#          if_key_exists: fail
#
#      - name: deploy to staging
#        run: ./scripts/deploy-staging.sh
#        env:
#          PR_ID: ${{ github.event.number }}
