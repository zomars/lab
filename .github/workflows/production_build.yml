name: Production Build

on:
  workflow_call:
    inputs:
      with_bsr:
        required: false
        type: boolean
        default: false
      pr_id:
        required: false
        type: string

    secrets:
      node_version:
        required: true

concurrency:
  group: prod-build-${{ github.sha }}

env:
  staleBuildFilesFindArgs: -maxdepth 1 -type f -regextype posix-egrep -regex ".*\.(json|js|css|map|txt)$"
  pr_id: ${{ inputs.pr_id }}

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Set nodeJs version
        with:
          node-version: ${{ secrets.node_version }}

      - name: Cache production build
        id: prod-build-cache
        uses: actions/cache@v3
        env:
          cache-name: prod-build
          key-1: ${{ secrets.node_version }}-${{ hashFiles('yarn.lock') }}
          key-2: ${{ hashFiles('gatsby.config.ts','gatsby.node.ts','gatsby-ssr.tsx','src/html.tsx','src/gatsby-hooks/*.*') }}
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-${{ env.key-2 }}-${{ github.sha }}
          restore-keys: |-
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-${{ env.key-2 }}-
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-

      - name: Purge top level & obsolete JS, JSON, HTML and CSS files from build folder
        # remove redundant files if not a complete match (for old cache records)
        if: steps.prod-build-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p public
          find public ${{ env.staleBuildFilesFindArgs }}
          find public ${{ env.staleBuildFilesFindArgs }} -delete

      - name: Restore node_modules from cache
        # skip build on exact cache hit
        if: steps.prod-build-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        env:
          cache-name: node-modules-yarn
          cache-key: ${{ secrets.node_version }}-${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.cache-key }}

      - name: Gatsby production build
        if: steps.prod-build-cache.outputs.cache-hit != 'true'
        run: yarn build

      - name: Print list of top level JS, HTML and CSS files
        run: find public ${{ env.staleBuildFilesFindArgs }}

      - name: Bundle size report cache
        if: inputs.with_bsr == true
        id: bsr-cache
        uses: actions/cache@v3
        with:
          path: bundle-size-report-${{ github.sha }}.json
          key: ${{ secrets.node_version }}-${{ github.sha }}

      - name: Bundle Size Report
        if: inputs.with_bsr == true && steps.bsr-cache.outputs.cache-hit != 'true'
        run: yarn bsr autorun -o bundle-size-report-${{ github.sha }}.json
