name: master update

on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PR_ID: ${{ github.event.number }}

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install dependencies
        run: yarn install --prefer-offline

  deploy:
    runs-on: ubuntu-latest

    needs: setup

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}

      - name: install deps
        run: yarn install --prefer-offline

      - name: restore website build from cache
        id: restore-website-build-from-cache
        uses: actions/cache@v2
        env:
          cache-name: prod-build
        with:
          path: public
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: build the website
        if: steps.restore-website-build-from-cache.outputs.cache-hit != 'true'
        run: yarn build

      - name: netlify deploy
        run: yarn deploy-netlify --prod --message "$DEPLOY_MESSAGE"
        env:
          NETLIFY_SITE_ID: 0f94f863-38eb-4a4b-a1c3-dd677837bd32
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          DEPLOY_MESSAGE: Production update by PR${{ github.event.number }}/${{ github.sha }}
